<form
  action="/cart"
  method="POST"
  novalidate>
  <div class="max-w-sm z-10 bg-zinc-800 rounded-xl p-8 fixed left-0 right-0 top-2.5 mx-auto md:left-auto md:right-2.5 cart-notification hidden"></div>
</form>

<script>
  function closeCartNotification() {
    document.querySelector('.cart-notification').classList.add('hidden')
  }

  function alertMe() {
    alert("I am alerting you!")
  }

  function formatMoney(cents, format) {
    if (typeof cents == 'string') {
      cents = cents.replace('.', '');
    }
    var value = '';
    var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
    var formatString = (format || this.money_format);

    function defaultOption(opt, def) {
      return(
        typeof opt == 'undefined'
          ? def
          : opt
      );
    }

    function formatWithDelimiters(number, precision, thousands, decimal) {
      precision = defaultOption(precision, 2);
      thousands = defaultOption(thousands, ',');
      decimal = defaultOption(decimal, '.');

      if (isNaN(number) || number == null) {
        return 0;
      }

      number = (number / 100.0).toFixed(precision);

      var parts = number.split('.'),
        dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
        cents = parts[1]
          ? (decimal + parts[1])
          : '';

      return dollars + cents;
    }

    switch (formatString.match(placeholderRegex)[1]) {
      case 'amount': value = formatWithDelimiters(cents, 2);
        break;
      case 'amount_no_decimals': value = formatWithDelimiters(cents, 0);
        break;
      case 'amount_with_comma_separator': value = formatWithDelimiters(cents, 2, '.', ',');
        break;
      case 'amount_no_decimals_with_comma_separator': value = formatWithDelimiters(cents, 0, '.', ',');
        break;
    }

    return formatString.replace(placeholderRegex, value);
  };
</script>